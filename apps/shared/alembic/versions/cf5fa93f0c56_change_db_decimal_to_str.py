"""Change db Decimal to str

Revision ID: cf5fa93f0c56
Revises: 227cd0abde09
Create Date: 2025-08-01 17:23:57.597986

"""

from typing import Sequence, Union
import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from shared.protocol_ids import ProtocolIDs

# revision identifiers, used by Alembic.
revision: str = "cf5fa93f0c56"
down_revision: Union[str, None] = "227cd0abde09"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "notification",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("wallet_id", sa.String(), nullable=False),
        sa.Column("telegram_id", sa.String(), nullable=False),
        sa.Column(
            "ip_address",
            sqlalchemy_utils.types.ip_address.IPAddressType(length=50),
            nullable=True,
        ),
        sa.Column("health_ratio_level", sa.Float(), nullable=False),
        sa.Column(
            "protocol_id",
            sqlalchemy_utils.types.choice.ChoiceType(ProtocolIDs),
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_notification_email"), "notification", ["email"], unique=False
    )
    op.create_table(
        "telegram_log",
        sa.Column("sent_at", sa.DateTime(), nullable=False),
        sa.Column("notification_data_id", sa.UUID(), nullable=False),
        sa.Column("is_succesfully", sa.Boolean(), nullable=False),
        sa.Column("message", sa.String(), server_default="", nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["notification_data_id"],
            ["notification.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("interest_rate")
    op.drop_table("zklend_collateral_debt")
    op.drop_table("non_interest_bearing_collateral_mint_event")
    op.drop_table("debt_mint_event")
    op.drop_index("ix_vesu_collateral_debt_user_id", table_name="vesu_collateral_debt")
    op.drop_table("vesu_collateral_debt")
    op.drop_table("borrowing_event")
    op.drop_index("ix_vesu_positions_pool_id", table_name="vesu_positions")
    op.drop_index("ix_vesu_positions_user", table_name="vesu_positions")
    op.drop_table("vesu_positions")
    op.drop_table("liquidable_debt")
    op.drop_table("debt_transfer_event")
    op.drop_table("debt_burn_event")
    op.drop_table("deposit_event")
    op.drop_table("repayment_event")
    op.drop_table("accumulators_sync_event")
    op.drop_table("collateral_enabled_disabled_event")
    op.drop_table("loan_state")
    op.drop_table("health_ratio_level")
    op.drop_table("bearing_collateral_mint_event")
    op.drop_table("bearing_collateral_burn_event")
    op.drop_table("non_interest_bearing_collateral_burn_event")
    op.drop_table("liquidation_event")
    op.drop_table("orderbook")
    op.drop_table("withdrawal_event")
    op.drop_table("hashtack_collateral_debt")
    op.drop_table("interest_rate_event")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "interest_rate_event",
        sa.Column("debt_token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "lending_index",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "borrow_index",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "hashtack_collateral_debt",
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("loan_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "collateral",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "debt",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("debt_category", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "original_collateral",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "borrowed_collateral",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("version", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "withdrawal_event",
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "orderbook",
        sa.Column("token_a", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("token_b", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("timestamp", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("block", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("dex", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("current_price", sa.NUMERIC(), autoincrement=False, nullable=True),
        sa.Column(
            "asks",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "bids",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "liquidation_event",
        sa.Column("liquidator", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("debt_token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "debt_raw_amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "debt_face_amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "collateral_token", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "collateral_amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "non_interest_bearing_collateral_burn_event",
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "bearing_collateral_burn_event",
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "bearing_collateral_mint_event",
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "health_ratio_level",
        sa.Column("timestamp", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("value", sa.NUMERIC(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "loan_state",
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "deposit",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("block", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("timestamp", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "collateral",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "debt",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "collateral_enabled_disabled_event",
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "accumulators_sync_event",
        sa.Column("token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "lending_accumulator",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "debt_accumulator",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "repayment_event",
        sa.Column("repayer", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("beneficiary", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "raw_amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "face_amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "deposit_event",
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "face_amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "debt_burn_event",
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "debt_transfer_event",
        sa.Column("sender", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("recipient", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "liquidable_debt",
        sa.Column("liquidable_debt", sa.NUMERIC(), autoincrement=False, nullable=False),
        sa.Column("protocol_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "collateral_token_price", sa.NUMERIC(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "collateral_token", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column("debt_token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "vesu_positions",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("pool_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("collateral_asset", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("debt_asset", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("block_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="vesu_positions_pkey"),
    )
    op.create_index("ix_vesu_positions_user", "vesu_positions", ["user"], unique=False)
    op.create_index(
        "ix_vesu_positions_pool_id", "vesu_positions", ["pool_id"], unique=False
    )
    op.create_table(
        "borrowing_event",
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "raw_amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "face_amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "vesu_collateral_debt",
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "collateral",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "debt",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "deposit",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="vesu_collateral_debt_pkey"),
    )
    op.create_index(
        "ix_vesu_collateral_debt_user_id",
        "vesu_collateral_debt",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "debt_mint_event",
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "non_interest_bearing_collateral_mint_event",
        sa.Column("sender", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("recipient", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=38, scale=18),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("event_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("block_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "zklend_collateral_debt",
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "collateral",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "debt",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "deposit",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "collateral_enabled",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "interest_rate",
        sa.Column("block", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("timestamp", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("protocol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "collateral",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "debt",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_table("telegram_log")
    op.drop_index(op.f("ix_notification_email"), table_name="notification")
    op.drop_table("notification")
    # ### end Alembic commands ###
